branches:
  only:
  - master
  - develop
  - "/^releases\\/.*$/"
jobs:
  fast_finish: true
  include:
  - stage: flake8
    python: '2.7'
    os: linux
    language: python
    env: TEST_SUITE=flake8
  - stage: unit tests + documentation
    python: '2.6'
    os: linux
    language: python
    env: TEST_SUITE=unit
  - python: '2.7'
    os: linux
    language: python
    env:
    - TEST_SUITE=unit
    - COVERAGE=true
  - python: '3.3'
    os: linux
    language: python
    env: TEST_SUITE=unit
  - python: '3.4'
    os: linux
    language: python
    env: TEST_SUITE=unit
  - python: '3.5'
    os: linux
    language: python
    env: TEST_SUITE=unit
  - python: '3.6'
    os: linux
    language: python
    env:
    - TEST_SUITE=unit
    - COVERAGE=true
  - os: osx
    language: generic
    env:
    - TEST_SUITE=unit
    - PYTHON_VERSION=2.7
    - COVERAGE=true
  - python: '2.7'
    os: linux
    language: python
    env: TEST_SUITE=doc
  - stage: build tests
    python: '2.7'
    os: linux
    language: python
    env:
    - TEST_SUITE=build
    - COVERAGE=true
    - SPEC=mpich
  - python: '2.7'
    os: linux
    language: python
    env:
    - TEST_SUITE=build
    - COVERAGE=true
    - SPEC=astyle
  - python: '2.7'
    os: linux
    language: python
    env:
    - TEST_SUITE=build
    - COVERAGE=true
    - SPEC=tut
  - python: '2.7'
    os: linux
    language: python
    env:
    - TEST_SUITE=build
    - COVERAGE=true
    - SPEC=py-setuptools
  - python: '2.7'
    os: linux
    language: python
    env:
    - TEST_SUITE=build
    - COVERAGE=true
    - SPEC=openjpeg
  - python: '2.7'
    os: linux
    language: python
    env:
    - TEST_SUITE=build
    - COVERAGE=true
    - SPEC=r-rcpp
  - python: '3.6'
    os: linux
    language: python
    env:
    - TEST_SUITE=build
    - COVERAGE=true
    - SPEC=mpich
sudo: false
addons:
  apt:
    packages:
    - gfortran
    - mercurial
    - graphviz
    - gnupg2
    - cmake
    - r-base
    - r-base-core
    - r-base-dev
    - perl
    - perl-base
cache: pip
before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew ls --versions python > /dev/null || brew install python; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then rm /usr/local/include/c++ ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew ls --versions gcc    > /dev/null || brew install gcc;    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew ls --versions gnupg2 > /dev/null || brew install gnupg2; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then virtualenv venv; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then source venv/bin/activate; fi

# Install various dependencies
install:
- pip install --upgrade pip
- pip install --upgrade six
- pip install --upgrade setuptools
- pip install --upgrade codecov
- pip install --upgrade flake8
- if [[ "$TEST_SUITE" == "doc" ]]; then pip install --upgrade -r lib/spack/docs/requirements.txt;
  fi
before_script:
  # Need this for the git tests to succeed.
  - git config --global user.email "spack@example.com"
  - git config --global user.name "Test User"

  # Need this to be able to compute the list of changed files
  - git fetch origin develop:develop

  # Set up external dependencies for build tests, because the take too long to compile
  - if [[ "$TEST_SUITE" == "build" ]]; then cp share/spack/qa/configuration/packages.yaml etc/spack/packages.yaml; fi

#=============================================================================
# Building
#=============================================================================
script:
  - share/spack/qa/run-$TEST_SUITE-tests
  - if [[ "$COVERAGE" == "true" ]]; then codecov --env PY_VERSION --required ; fi

#=============================================================================
# Notifications
#=============================================================================
notifications:
  slack:
    secure: URUDHl7AJRCT8cykDCIuaMpHEPDY9VWHGi+jjmoKXZkZJY1wqpQsMQSRoDK59NIFFnLfbSmAISFEw1Tyn3wwyJE9088RD4dp8y1uoH1mZk+s/jPpJsH6OS1erTn1CnWo6k9/GceZldc1dBnOk6F+rciLLvmEIgYmCueSmp99DQcUIMzdU3zsrBfNRHmbahBxvwL3sPElzWJrnMT35q+ve5Sxbw1hnxkkHjfDDU48EE2Pc8Lw8GLFiYEFvKv7jNKlH8UTsBTOGJV4YDgVXEIZyjE1KxNqaGrE2DHDrMYGfX65oi84Nee+Fc9ecJ0NdhStFaF0sKpwhZ9DHULQ0IHBBitsioa8iW+Q8evaKlSkIi44JNHsBJXGdZ0LTPZBhsguVm3dpdKR55piwNG4IvLgPZzaHBrjdG2HY4yIb95dwihMeCEJlMe0vHO0D58FrC4ZpwN97oBfSAlViBglZcrnv0zWkQVDjYjnzlwCrL6GBcDF4EB3Dd2Ur8RQrlaJ19rtiAk69GRw6YbPLd/jFu5UYuL7VMsYYO13wYzZsxUMpv7lRCLfs+zmlRnJb1PJoGTHorEF+Nu12lcJRyX8lCQY2XktopfWfSoeLxaElWNaIRPE++eMYXSXdqjUIpTky/BQUsl7j1nR4i3tfUFekcRIBoZSQv+z4k/yhJrnhqEp5m0=
    rooms:
      secure: o4i7jyh5c6nwm8Uvia6YmE5Ahm6TZQb/FwY3LnMY44ywI6SD4BjuG2yXYsZolvaUuv4xeLe9usdgX2yU9sHvoAVrEkPVd0UQFYF5sK0xcn1Skr+dwrCbbByror7a5IlwrYNba9LUAL4qqCRFuzF79ELKG7aej5vngaW4BUa3NqwznzbC4LsWkxHKFySMbQWe4qAgAqctxmZKfSDSBZd1QA0vBg64pJSwYveZniB9awywYEBhswijGf2+ELcvyk0KXZhxK7GHftqnSSnaDkGG92E7A/MCdoTYcMgtPRe47N2+Nzip6c2mWF6wUPhQExL3i8kUT+mLFAJqSB2e7sbIy5a0ovtXzWhbintgN5y9nPVA3W3JTYFDOOvCQTDeip4jgKOXbizBCFqOwba5s2yCJ/J2rpbaBKs9q7/eHsWuxMFPNJ5NZgPOGXkJuVmlWUgSPZSkthodmvjSDVMb+qrqmXcG2NzJMcIey+xv7y3SmCVSOuV77xELd5XN7ZxjVLCyVU09ETWY9FdvphKt8f/Ti7Vyx30no/67k2EU448j8q3rbNw/qZqHr0/MLsqwxZlrmQIDdL//SopvjOK1zQQx8qnmrDH3L9Z03nl1MZI4WGAD/SdKQSB+MCe3iIMd8nqFgVgKVJgDLKCLIj7wJViqyXsueM2PX+/x5m2KpfZXKtI=
